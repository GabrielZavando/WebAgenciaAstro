---
interface Props {
  id: number;
  icon: string;
  title: string;
  description: string;
}

const { id, icon, title, description } = Astro.props;
---

<div class="service-card">
  <div class="service-card__icon">{icon}</div>
  <h3 class="service-card__title">{title}</h3>
  <p class="service-card__description">{description}</p>
  <button 
    type="button"
    class="service-card__button"
    data-modal={`modal-${id}`}
    aria-label={`Ver más sobre ${title}`}
    aria-haspopup="dialog"
  >
    Ver más
  </button>
</div>

<style lang="scss">
  @use '../styles/abstracts/colors' as *;
  @use '../styles/abstracts/variables' as *;
  @use '../styles/abstracts/mixins' as *;

  .service-card {
    padding: 2rem;
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: 1rem;
    transition: all 0.3s ease;

    &:hover {
      transform: translateY(-5px);
      border-color: var(--color-primary);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    &__icon {
      font-size: $text-3xl;
      margin-bottom: 1rem;
      color: var(--color-primary);

      @include respond-to(md) {
        font-size: $text-4xl;
      }

      @include respond-to(lg) {
        font-size: $text-5xl;
      }
    }

    &__title {
      font-family: $font-primary;
      font-weight: $weight-semibold;
      color: var(--color-heading);
      margin-bottom: 1rem;
      font-size: $text-lg;

      @include respond-to(md) {
        font-size: $text-xl;
      }

      @include respond-to(lg) {
        font-size: $text-2xl;
      }
    }

    &__description {
      color: var(--color-text);
      margin-bottom: 1.5rem;
      line-height: $leading-normal;
      font-family: $font-secondary;
    }

    &__button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      font-family: $font-primary;
      font-weight: $weight-semibold;
      font-size: $text-base;
      background: var(--color-primary);
      color: var(--color-white);
      border: none;
      border-radius: 0.5rem;
      cursor: pointer;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.2),
          transparent
        );
        transition: 0.5s;
      }

      &:hover {
        transform: translateY(-2px);
        background: var(--color-primary-dark);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);

        &::before {
          left: 100%;
        }
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
</style>
