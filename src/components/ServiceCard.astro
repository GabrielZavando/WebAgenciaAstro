---
interface Props {
  id: number;
  icon: string;
  title: string;
  description: string;
}

const { id, icon, title, description } = Astro.props;
---

<div class="service-card">
  <div class="service-card__icon" set:html={icon}></div>
  <h3 class="service-card__title">{title}</h3>
  <p class="service-card__description">{description}</p>
  <button 
    type="button"
    class="btn-cta__solid"
    data-modal={`modal-${id}`}
    aria-label={`Ver más sobre ${title}`}
    aria-haspopup="dialog"
  >
    Ver más
  </button>
</div>

<style lang="scss">
  @use '../styles/config' as *;

  .service-card {
    padding: var(--space-xl);
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 0;
    transition: all var(--transition-normal) ease;
    position: relative;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center; // Centrar todo el contenido horizontalmente
    text-align: center; // Centrar texto e iconos
    height: 100%; // Permite que todas las cards tengan la misma altura en el grid

    // Estilo flat moderno - hover con efecto de elevación
    &:hover {
      border-color: var(--color-primary);
      background: var(--color-surface-secondary);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
      transform: scale(1.02);
      
      .service-card__icon {
        color: var(--color-accent); // Color de acento en hover
        transform: scale(1.05);
      }
    }

    &__icon {
      margin-bottom: var(--space-lg);
      color: var(--color-primary); // Color primario por defecto
      transition: all var(--transition-normal) ease;
      font-size: 2rem; // Tamaño del icono Font Awesome

      // Estilos para iconos Font Awesome insertados con set:html
      i {
        color: inherit; // Hereda el color del contenedor
      }

      @media (min-width: #{container(narrow)}) {
        font-size: 2.25rem;
      }

      @media (min-width: #{container(max)}) {
        font-size: 2.5rem;
      }
    }

    &__title {
      font-family: var(--font-headings);
      font-weight: 600;
      color: var(--color-text);
      margin-bottom: var(--space-sm);
      font-size: 1.25rem;
      line-height: 1.3;

      @media (min-width: #{container(narrow)}) {
        font-size: 1.375rem;
      }

      @media (min-width: #{container(max)}) {
        font-size: 1.5rem;
      }
    }

    &__description {
      color: var(--color-text-secondary);
      line-height: 1.5;
      font-family: var(--font-primary);
      font-size: 0.9rem;
      flex-grow: 1;
      margin-bottom: 0; // Removemos el margin-bottom para que flex-grow controle el espacio

      @media (min-width: #{container(narrow)}) {
        font-size: 1rem;
        line-height: 1.6;
      }
    }

    // Botón siempre al final con espaciado consistente
    .btn-cta__solid {
      margin-top: var(--space-lg); // Espacio entre descripción y botón
      margin-bottom: 0; // Sin margen inferior - el padding del card lo maneja
      flex-shrink: 0; // Evita que se comprima
      min-height: 44px; // Altura mínima consistente
    }
  }
</style>
