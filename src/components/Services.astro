---
import servicesData from "../data/services.json";
import ServiceCard from "./ServiceCard.astro";
import Modal from "./Modal.astro";

const { section, services } = servicesData;
---

<section id="services" class="services">
  <h2 class="services__title">{section.title}</h2>
  <p class="services__description">{section.description}</p>

  <div class="services__grid">
    {
      services.map((service) => (
        <ServiceCard
          id={service.id}
          icon={service.icon}
          title={service.title}
          description={service.description}
        />
      ))
    }
  </div>

  {/* Modales */}
  {
    services.map((service) => (
      <Modal id={`modal-${service.id}`} title={service.title}>
        <div class="modal-content">
          <p class="modal-content__description">
            {service.modalContent.extendedDescription}
          </p>

          <div class="modal-content__benefits">
            <h4>Beneficios</h4>
            <ul>
              {service.modalContent.benefits.map((benefit) => (
                <li>{benefit}</li>
              ))}
            </ul>
          </div>

          <div class="modal-content__implementation">
            <h4>Implementación</h4>
            <ol>
              {service.modalContent.implementation.map((step) => (
                <li>{step}</li>
              ))}
            </ol>
          </div>

          {service.modalContent.videoId !== "próximamente" && (
            <div class="modal-content__video">
              <iframe
                width="100%"
                height="315"
                src={`https://www.youtube.com/embed/${service.modalContent.videoId}`}
                title={`Video sobre ${service.title}`}
                frameborder="0"
                allow="accelerometer, autoplay, clipboard-write, encrypted-media, gyroscope, picture-in-picture"
                allowfullscreen
              />
            </div>
          )}

          <button
            class="modal-content__cta service-card__button"
            data-modal={`modal-${service.id}`}
            data-service={service.title}
          >
            {service.modalContent.ctaText}
          </button>
        </div>
      </Modal>
    ))
  }
</section>



<style lang="scss">
  @use "../styles/abstracts/colors" as *;
  @use "../styles/abstracts/variables" as *;
  @use "../styles/abstracts/mixins" as *;

  .services {
    padding: var(--section-padding-y);
    text-align: center;
    background-color: var(--color-background);

    &__title {
      font-family: $font-primary;
      font-weight: $weight-bold;
      color: var(--color-heading);
      margin-bottom: 1.5rem;
      position: relative;
      display: inline-block;
      @include responsive-font($text-2xl, $text-3xl, $text-4xl);

      &::after {
        content: "";
        position: absolute;
        bottom: -0.5rem;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 3px;
        background: var(--color-primary);
      }
    }

    &__description {
      max-width: var(--container-readable);
      margin: 0 auto 2rem;
      line-height: $leading-relaxed;
      color: var(--color-text);
      font-family: $font-secondary;
      @include responsive-font($text-base, $text-lg, $text-xl);

      @include respond-to(md) {
        margin-bottom: 3rem;
      }
    }

    &__grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: var(--grid-gap);
      width: min(95%, var(--section-content));
      margin: 0 auto;

      @include respond-to(md) {
        grid-template-columns: repeat(2, 1fr);
      }

      @include respond-to(lg) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
  }

  .modal-content {
    &__description {
      margin-bottom: 2rem;
      line-height: $leading-relaxed;
    }

    &__benefits,
    &__implementation {
      margin-bottom: 2rem;

      h4 {
        font-family: $font-primary;
        font-weight: $weight-semibold;
        margin-bottom: 1rem;
        color: var(--color-heading);
      }
    }

    &__benefits ul {
      list-style-position: inside;
      list-style-type: disc;
      padding: 0;
      text-align: left;

      li {
        margin-bottom: 0.75rem;
        padding-left: 1.75rem;
        position: relative;
        text-align: left;
      }
    }

    &__implementation ol {
      list-style-position: inside;
      padding: 0;
      counter-reset: implementation-counter;
      text-align: left;

      li {
        margin-bottom: 0.75rem;
        position: relative;
        padding-left: 1.75rem;
        text-align: left;
      }
    }

    &__video {
      margin: 2rem 0;
      position: relative;
      padding-bottom: 56.25%; /* 16:9 Aspect Ratio */
      height: 0;
      overflow: hidden;

      iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }
    }

    &__cta {
      display: inline-block;
      margin-top: 1.5rem;
      padding: 1rem 2rem;
      background: var(--color-primary);
      color: var(--color-white);
      border: none;
      border-radius: 0.5rem;
      font-family: $font-primary;
      font-weight: $weight-semibold;
      cursor: pointer;
      transition: all 0.3s ease;

      &:hover {
        background: var(--color-primary-dark);
        transform: translateY(-2px);
      }

      &:active {
        transform: translateY(0);
      }
    }
  }
</style>
