---
import servicesData from "../../data/services.json";
import ServiceCard from "../ServiceCard.astro";
import Modal from "../Modal.astro";

const { section, services } = servicesData;
---

<section id="services" class="services">
  <div class="services-content">
    <h2 class="title-section fade-in">{section.title}</h2>
    <p class="services-content__description fade-in fade-in-delay-1">{section.description}</p>

    <div class="services-content__grid">
        {
          services.map((service, index) => (
            <ServiceCard
            id={service.id}
            icon={service.icon}
            title={service.title}
            description={service.description}
            class={`fade-in fade-in-delay-${index + 2}`}
          />
        ))
      }
    </div>

    {/* Modales */}
    {
      services.map((service) => (
        <Modal id={`modal-${service.id}`} title={service.title}>
          <div class="modal-content">
            <p class="modal-content__description">
              {service.modalContent.extendedDescription}
            </p>

            <div class="modal-content__benefits">
              <h4>Beneficios</h4>
              <ul>
                {service.modalContent.benefits.map((benefit) => (
                  <li>{benefit}</li>
                ))}
              </ul>
            </div>

            <div class="modal-content__implementation">
              <h4>Implementación</h4>
              <ol>
                {service.modalContent.implementation.map((step) => (
                  <li>{step}</li>
                ))}
              </ol>
            </div>

            {service.modalContent.videoId !== "próximamente" && (
              <div class="modal-content__video">
                <iframe
                  width="100%"
                  height="315"
                  src={`https://www.youtube.com/embed/${service.modalContent.videoId}`}
                  title={`Video sobre ${service.title}`}
                  frameborder="0"
                  allow="accelerometer, autoplay, clipboard-write, encrypted-media, gyroscope, picture-in-picture"
                  allowfullscreen
                />
              </div>
            )}

            <button
              class="modal-content__cta btn-cta__solid"
              data-modal={`modal-${service.id}`}
              data-service={service.title}
            >
              {service.modalContent.ctaText}
            </button>
          </div>
        </Modal>
      ))
    }
  </div>
  
</section>

<style lang="scss">
  @use '../../styles/config' as *;

  .services {
    padding: var(--space-xl) 0;
    background-color: var(--color-surface);
  }

  .services-content {
    // Container usando el nuevo sistema
    width: 100%;
    max-width: #{container(max)};
    margin: 0 auto;
    padding: 0 var(--padding-container);
  }

  .services-content__description {
    text-align: center;
    margin-bottom: var(--space-xl);
    max-width: 800px;
    margin-left: auto;
    margin-right: auto;
    color: var(--color-text-secondary);
    font-size: 1.125rem;
    line-height: 1.6;
  }

  .services-content__grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: var(--space-lg);
    margin-bottom: var(--space-xl);

    // Desde 480px - Dos columnas
    @include respond-to(xs) {
      grid-template-columns: repeat(2, 1fr);
    }

    // Desde 1200px - Cuatro columnas (una fila horizontal)
    @include respond-to(lg) {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  // Estilos para el contenido del modal
  .modal-content {
    &__description {
      margin-bottom: var(--space-lg);
      color: var(--color-text);
      line-height: 1.6;
    }

    &__benefits,
    &__implementation {
      margin-bottom: var(--space-lg);

      h4 {
        color: var(--color-primary);
        font-family: var(--font-headings);
        font-weight: 600;
        margin-bottom: var(--space-sm);
        font-size: 1.125rem;
      }

      ul, ol {
        padding-left: var(--space-md);
        
        li {
          margin-bottom: var(--space-xs);
          color: var(--color-text);
          line-height: 1.5;
        }
      }
    }

    &__video {
      margin-bottom: var(--space-lg);
      
      iframe {
        border-radius: 8px;
        box-shadow: var(--shadow-md);
      }
    }

    &__cta {
      margin-top: var(--space-lg);
      display: block;
      margin-left: auto;
      margin-right: auto;
      text-align: center;
    }
  }
</style>

