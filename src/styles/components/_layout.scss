@use '../abstracts/colors' as *;
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

// 1. SECTIONS
// Contenedores de nivel superior que definen áreas principales
.section {
    width: 100%;
    padding-block: var(--section-padding-y);

    // Variantes de sección
    &--hero {
        min-height: 100vh;
        display: flex;
        align-items: center;
    }

    &--sm {
        padding-block: calc(var(--section-padding-y) * 0.5);
    }

    &--lg {
        padding-block: calc(var(--section-padding-y) * 1.5);
    }
}

// 2. CONTAINERS
// Contenedores que mantienen el contenido centrado y con márgenes
.container {
    width: min(95%, var(--section-content));
    margin-inline: auto;
    padding-inline: var(--container-padding);

    // Variantes de contenedor
    &--flex {
        display: flex;
        gap: var(--grid-gap);
        
        @include respond-to(md) {
            flex-direction: row;
        }
    }
}

// 3. GRIDS
// Sistema de grids para layouts internos
.grid {
    display: grid;
    gap: var(--grid-gap);

    // Variantes de columnas
    &--2-cols {
        @include respond-to(md) {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    &--3-cols {
        @include respond-to(lg) {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    // Layouts específicos
    &--auto-fit {
        grid-template-columns: repeat(
            auto-fit,
            minmax(min(100%, var(--min-column-width, 250px)), 1fr)
        );
    }

    &--sidebar {
        @include respond-to(md) {
            grid-template-columns: 300px 1fr;
        }
    }

    // Utilidades de alineación
    &--center {
        place-items: center;
    }

    &--start {
        align-items: start;
    }
}
