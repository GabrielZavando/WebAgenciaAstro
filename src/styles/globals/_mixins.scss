@use 'sass:color';
@use 'variables' as *;
@use 'breakpoints' as *;

@mixin container($padding: 16px) {
  width: 100%;
  max-width: $container-max;
  margin: 0 auto;
  padding: $padding;
  border: 1px solid blue;
}

@mixin container-flex($padding: 16px, $direction: row, $justify: space-between, $align: center) {
  display: flex;
  flex-direction: $direction;
  width: 100%;
  max-width: $container-max;
  margin: 0 auto;
  padding: $padding;
  border: 1px solid cyan;
  justify-content: $justify;
  align-items: $align;
}

// Sistema de Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap, $gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
  @if $gap != 0 {
    gap: var(--space-#{$gap});
  }
}

// Shortcuts de Flexbox comunes
@mixin flex-center {
  @include flex(row, center, center);
}

@mixin flex-column {
  @include flex(column);
}

@mixin flex-row {
  @include flex(row);
}

@mixin flex-between {
  @include flex(row, space-between, center);
}

@mixin flex-wrap {
  @include flex(row, flex-start, flex-start, wrap);
}

// Grid System
@mixin grid($columns: 1, $gap: 4) {
  display: grid;
  grid-template-columns: repeat($columns, minmax(0, 1fr));
  gap: var(--space-#{$gap});
}

// Sistema de tipografÃ­a responsive
@mixin responsive-font($mobile, $tablet, $desktop) {
  font-size: var(--#{$mobile});
  
  @include respond-to(sm) {
    font-size: var(--#{$tablet});
  }
  
  @include respond-to(lg) {
    font-size: var(--#{$desktop});
  }
}

// Interacciones y estados
@mixin interactive($type: 'default') {
  transition: all var(--transition-normal) var(--transition-ease-out);

  @if $type == 'default' {
    &:hover {
      transform: translateY(-2px);
    }
    
    &:active {
      transform: translateY(0);
    }
  } @else if $type == 'scale' {
    &:hover {
      transform: scale(1.05);
    }
    
    &:active {
      transform: scale(0.98);
    }
  } @else if $type == 'opacity' {
    &:hover {
      opacity: 0.8;
    }
    
    &:active {
      opacity: 1;
    }
  }

  &:focus-visible {
    outline: none;
    box-shadow: 0 0 0 3px var(--color-focus-ring);
  }
}

// Efectos de sombra
@mixin shadow($size: 'md') {
  @if $size == 'sm' {
    box-shadow: var(--shadow-sm);
  } @else if $size == 'md' {
    box-shadow: var(--shadow-md);
  } @else if $size == 'lg' {
    box-shadow: var(--shadow-lg);
  } @else if $size == 'xl' {
    box-shadow: var(--shadow-xl);
  }
}

// Gradientes
@mixin gradient($type: 'primary', $angle: 135deg) {
  @if $type == 'primary' {
    background: var(--gradient-primary);
  } @else if $type == 'secondary' {
    background: var(--gradient-secondary);
  } @else if $type == 'accent' {
    background: var(--gradient-accent);
  }
}

// Utilidades de texto
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Contenedor con padding responsive
@mixin section-padding {
  padding: var(--space-6);
  
  @include respond-to(sm) {
    padding: var(--space-8);
  }
  
  @include respond-to(lg) {
    padding: var(--space-12);
  }
}

// Bordes y radios
@mixin rounded($size: 'md') {
  @if $size == 'sm' {
    border-radius: var(--radius-sm);
  } @else if $size == 'md' {
    border-radius: var(--radius-md);
  } @else if $size == 'lg' {
    border-radius: var(--radius-lg);
  } @else if $size == 'full' {
    border-radius: var(--radius-full);
  }
}

// Aspect ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-bottom: percentage(math.div($height, $width));
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// Cards y contenedores
@mixin card($hover: true) {
  background-color: var(--color-card-bg);
  border: var(--border-thin) solid var(--color-border);
  @include rounded('lg');
  @include shadow('sm');
  
  @if $hover {
    @include interactive;
  }
}

// Botones
@mixin button($variant: 'primary', $size: 'md') {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: var(--weight-semibold);
  @include interactive;
  
  @if $variant == 'primary' {
    @include gradient;
    color: var(--color-white);
  } @else if $variant == 'secondary' {
    background-color: transparent;
    border: var(--border-regular) solid var(--color-primary);
    color: var(--color-primary);
  } @else if $variant == 'ghost' {
    background-color: transparent;
    color: var(--color-text);
    
    &:hover {
      background-color: var(--color-hover-overlay);
    }
  }
  
  @if $size == 'sm' {
    padding: var(--space-2) var(--space-4);
    font-size: var(--text-sm);
  } @else if $size == 'md' {
    padding: var(--space-3) var(--space-6);
    font-size: var(--text-md);
  } @else if $size == 'lg' {
    padding: var(--space-4) var(--space-8);
    font-size: var(--text-lg);
  }
}